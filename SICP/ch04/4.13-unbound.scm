(define (unbound? exp) (tagged-list? exp 'unbound))

(define (unbind-variable exp env) 
 (make-unbound! (cadr exp) env)
 'ok)

(define (make-unbound! var env)
 (let ((vars (frame-variables (first-frame env)))
	   (vals (frame-values (first-frame env))))
  (define (scan pre-vars pre-vals vars vals)
   (cond ((null? vars) 
		  (error "variable is not in the environment -- MAKE-UNBOUND" var))
		 ((eq? var (car vars))
		  (set-cdr! pre-vars (cdr vars))
		  (set-cdr! pre-vals (cdr vals)))
		 (else (scan vars vals (cdr vars) (cdr vals)))))
  (if (not (null? vars))
   (if (eq? var (car vars))
	(begin (set-car! vars (cdr vars))
		   (set-car! vals (cdr vals)))
	(scan vars vals (cdr vars) (cdr vals)))
   (error "the first frame of the environment is empty -- MAKE-UNBOUND" var))))
