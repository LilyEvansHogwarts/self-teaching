(define a '(begin (define (square x) (* x x))
				  (define count 0)
				  (define (id x)
				   (set! count (+ count 1))
				   x)
				  (square (id 10))))

(define b '(begin (define (square x) (* x x))
				  (define count 0)
				  (define (id x)
				   (set! count (+ count 1))
				   count)
				  (square (id 10))))

(load "4.29-without-evaluated-thunk.scm")
(display a)
(newline)
(display "Result: ")
(display (interpret a))
(newline)
(display b)
(newline)
(display "Result: ")
(display (interpret b))
(newline)

(load "4.29-with-evaluated-thunk.scm")
(display a)
(newline)
(display "Result: ")
(display (interpret a))
(newline)
(display b)
(newline)
(display "Result: ")
(display (interpret b))
(newline)
