(load "2.65-right-branch.scm")
(load "2.65-tree-list1.scm")
(load "2.65-partial-tree.scm")
(load "2.65-left-branch.scm")
(load "2.65-make-tree.scm")
(load "2.65-list-tree.scm")
(load "2.65-union-tree.scm")
(load "2.65-intersection-tree.scm")
(load "2.65-entry.scm")
(load "2.65-element-of-tree.scm")
(load "2.65-adjoin-tree.scm")
(load "2.65-tree-list2.scm")
(define (test)
  (define x (list->tree (list 1 2 3 4 5 6 7 8 9)))
  (define y (list->tree (list 5 6 7 8 9 10 11 12 13 14 15)))
  (display "right branch of x: ")
  (display (right-branch x))
  (newline)
  (display "left branch of x: ")
  (display (left-branch x))
  (newline)
  (display "adjoin-tree 10 x: ")
  (display (adjoin-tree 10 x))
  (newline)
  (display "union-tree x y: ")
  (display (union-tree x y))
  (newline)
  (display "intersection-tree x y: ")
  (display (intersection-tree x y)))
