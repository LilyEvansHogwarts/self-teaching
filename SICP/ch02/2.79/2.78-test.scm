(load "2.78-scheme-number.scm")
(load "2.78-apply-generic.scm")
(load "2.78-put-and-get.scm")
(load "2.78-complex.scm")
(load "2.78-rational.scm")
(load "2.78-rectangular.scm")
(load "2.78-polar.scm")

(define (test)
  (display "well prepared.")
  (newline)
  (install-scheme-number-package)
  (install-rectangular-package)
  (install-polar-package)
  (install-complex-package)
  (install-rational-package)
  (display "well prepared.")
  (newline)
  (define a (make-scheme-number 3))
  (display a)
  (newline)
  (define b (make-scheme-number 4))
  (display b)
  (newline)
  (display (add a b))
  (newline)
  (display (sub a b))
  (newline)
  (display (mul a b))
  (newline)
  (display (div a b))
  (newline)
  (display (equ? a b))
  (newline)
  (display (=zero? a))
  (newline)
  (define c (make-complex-from-real-imag 3 4))
  (display c)
  (newline)
  (define d (make-complex-from-mag-ang 3 4))
  (display d)
  (newline)
  (display (add c d))
  (newline)
  (display (sub c d))
  (newline)
  (display (mul c d))
  (newline)
  (display (div c d))
  (newline)
  (display (equ? c d))
  (newline)
  (display (=zero? c))
  (newline)
  (define e (make-rational 2 3))
  (display e)
  (newline)
  (define f (make-rational 4 5))
  (display f)
  (newline)
  (display (add e f))
  (newline)
  (display (sub e f))
  (newline)
  (display (mul e f))
  (newline)
  (display (div e f))
  (newline)
  (display (equ? e f))
  (newline)
  (display (=zero? e))
  (newline))
